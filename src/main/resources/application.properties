spring.application.name=demo

#this is to while both app and mysql is running on same machine
#localhost refers to the current container itself (i.e., Spring Boot container).
#So, Spring Boot will look for MySQL inside its own container, where MySQL is not running connection fails.
#spring.datasource.url=jdbc:mysql://localhost:3306/reactcurd

#mysql-db: docker compose-service name of my Mysql-container
#Docker Compose sets up an internal DNS that maps mysql-db MySQL container's IP.
spring.datasource.url=jdbc:mysql://mysql-db:3306/reactcurd

spring.datasource.username=root
spring.datasource.password=Sagar1212@
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
server.port=8080
#prints error,warn,info,debug,trace in controller
logging.level.com.reactcurd.controller=TRACE
#prints error,warn,info,debug,trace in service
logging.level.com.reactcurd.service=TRACE

management.endpoints.web.exposure.include=health,info,loggers,metrics,prometheus